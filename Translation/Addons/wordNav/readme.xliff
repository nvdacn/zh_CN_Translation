<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:2.0" version="2.0" srcLang="en" trgLang="zh-CN">
  <file id="wordNav.md" original="https://raw.githubusercontent.com/nvaccess/nvda/8f608df65a39799aa979f911d6167019280780e0/addons/wordNav/wordNav.md">
    <skeleton>
# $(ID:88b08d3c-2347-4ecb-9654-090f159b299b)
$(ID:2c8102bd-7b09-479d-b1d5-f58613e496c3)

$(ID:0caa8245-27a7-4674-8e62-362a5920fb72)
## $(ID:b0cc14c7-eea5-4531-aef0-413308042ce0)
$(ID:882dadaf-5041-4c7d-a73e-d21936442631)

$(ID:5ff05c20-45c1-4b2a-aed4-2d3939b0209d)
$(ID:b1087ee2-6a7d-4c35-867a-fb18fb6195df)
$(ID:0c93ad1f-bbe3-4db8-86de-e5ae60311b72)
$(ID:e7ed8666-5b2b-4939-aa02-619e693ea0a8)
$(ID:b3c7e035-490b-4806-809a-db2f385060db)

$(ID:c0f491ca-74b3-49b7-8f54-993632a5846e)

## $(ID:f0c8c671-b524-44fb-8c42-4de1634471dd)

$(ID:bca29353-a437-49d1-bc22-91661c039dd5)

* $(ID:e31efaa8-45f5-4ad4-a78b-515d0b44b4b5)

$(ID:f4db2ba0-d114-48b3-896a-21d1e5ce72f3)

* $(ID:0230fb3c-5722-493c-815c-797d46d23927)
* $(ID:b4fdaa3b-bbe6-48e3-a8e1-82b667bf29b4)
* $(ID:a41239fb-0536-4092-8679-a020dfb5255c)
* $(ID:79af9d3d-e99a-4ca6-81e8-156165ae6f9a)
* $(ID:b2892582-97bd-488d-a0c6-0cc6859569b4)

## $(ID:983afb65-70bb-461d-a801-297a8c49efb5)

$(ID:67c30481-9355-43b6-98b6-23c3fe86aa2a)
$(ID:279f572a-0c5e-4b79-8394-63642f475430)

##  $(ID:29b34072-9044-462c-b882-96ce6711aa41)

$(ID:eea70f7f-5c0b-42f3-83eb-c6ef88e220cc)

</skeleton>
    <unit id="88b08d3c-2347-4ecb-9654-090f159b299b">
      <notes>
        <note appliesTo="source">line: 2</note>
        <note appliesTo="source">prefix: # </note>
      </notes>
      <segment state="final">
        <source>nvda-word-nav</source>
        <target>单词导航 #</target>
      </segment>
    </unit>
    <unit id="2c8102bd-7b09-479d-b1d5-f58613e496c3">
      <notes>
        <note appliesTo="source">line: 3</note>
      </notes>
      <segment state="final">
        <source>WordNav NVDA add-on improves built-in navigation  by word, as well as adds extra word navigation commands with different definition for the word. It also provides word selection commands.</source>
        <target>NVDA 单词导航插件 WordNav 改进了 NVDA 原有的单词导航方式，支持选择文本，同时还增加了一些额外的单词导航命令，这些命令采用不同的单词定义。</target>
      </segment>
    </unit>
    <unit id="0caa8245-27a7-4674-8e62-362a5920fb72">
      <notes>
        <note appliesTo="source">line: 5</note>
      </notes>
      <segment state="final">
        <source>Most text editors support Control+LeftArrow/RightArrow commands for word navigation. However the definition of the word changes from one program to another. This is especially true of modern web-based text editors, such as Monaco. NVDA should know the definition of word in given program in order to speak words correctly. If NVDA doesn't know the exact definition, then either words are going to be skipped, or pronounced multiple times. Moreover, some web-based text editors position the cursor in the end of the word, instead of the beginning, making editing much harder for visually impaired users. In order to combat this problem I have created enhanced word navigation commands, that take the word definition from Notepad++ and they do not rely on program's definition of words, but rather parse lines into words on NVDA's side. The Control+LeftArrow/RightArrow gesture is not even sent to the program, thus ensuring the consistency of the speech.</source>
        <target>大多数文本编辑器支持“Ctrl+左右箭头”命令来进行单词导航，但对于单词的定义在这些应用程序之间则存在差异，尤其是现在一些基于 web 的文本编辑器，如 Monaco。为了正确地朗读单词，NVDA 应当知道给定的应用程序中是如何定义单词的。如果 NVDA 不知道单词的确切定义，不仅给定的单词会被跳过，而且有可能将单词朗读数次。不仅如此，一些基于 web 的文本编辑器将光标置于单词的末尾而不是开头，这就使视障用户的编辑更加困难了。为了克服这些困难，我创建了一些用于单词导航的增强命令。这些命令引进了 Notepad++ 的单词定义，并且不依赖于编辑器程序对单词的定义，而是由 NVDA 将文本行解析为单词的。甚至“Ctrl+左右箭头”这样的手势也不会被发送到编辑器程序，这便确保了朗读的一致性。</target>
      </segment>
    </unit>
    <unit id="b0cc14c7-eea5-4531-aef0-413308042ce0">
      <notes>
        <note appliesTo="source">line: 6</note>
        <note appliesTo="source">prefix: ## </note>
      </notes>
      <segment state="final">
        <source>Word navigation and word definitions</source>
        <target>单词导航和单词定义</target>
      </segment>
    </unit>
    <unit id="882dadaf-5041-4c7d-a73e-d21936442631">
      <notes>
        <note appliesTo="source">line: 7</note>
      </notes>
      <segment state="final">
        <source>Currently WordNav supports five definitions of the word, assigned to different gestures:</source>
        <target>目前，单词导航插件支持五种单词定义，并为它们分配了相应的手势：</target>
      </segment>
    </unit>
    <unit id="5ff05c20-45c1-4b2a-aed4-2d3939b0209d">
      <notes>
        <note appliesTo="source">line: 9</note>
      </notes>
      <segment state="final">
        <source>- `Left Control+Arrows`: Notepad++ definition, that treats alphanumeric characters as words, and adjacent punctuation marks are also treated as words. This should be the most convenient word definition for the majority of users.</source>
        <target>- `左 Ctrl+箭头`： Notepad++ 定义。它将字母、数字作为单词处理，同时把临近的标点符号也视为单词。对大多数用户而言，这应当是最便捷的单词定义了。</target>
      </segment>
    </unit>
    <unit id="b1087ee2-6a7d-4c35-867a-fb18fb6195df">
      <notes>
        <note appliesTo="source">line: 10</note>
      </notes>
      <segment state="final">
        <source>- `RightControl+Arrows`: Fine word definition splits `camelCaseIdentifiers` and `underscore_separated_identifiers` into separate parts, thus allowing the cursor to go into long identifiers.</source>
        <target>- `右 Ctrl+箭头`：精细单词定义。它可以将“`camelCaseIdentifiers`”（驼峰命名法）和“`underscore_separated_identifiers`”（下划线命名法）拆分成若干部分，从而实现单词导航。</target>
      </segment>
    </unit>
    <unit id="0c93ad1f-bbe3-4db8-86de-e5ae60311b72">
      <notes>
        <note appliesTo="source">line: 11</note>
      </notes>
      <segment state="final">
        <source>- `LeftControl+Windows+Arros`: Bulky word definition treats almost all punctuation symbols adjacent to text as part of a single word, therefore it would treat paths like `C:\directory\subdirectory\file.txt` as a single word.</source>
        <target>- `左 Ctrl+Windows+箭头`：大型单词定义。它将临近文本的几乎所有标点符号都作为一个单词的一部分，因此它会把像“`C:\directory\subdirectory\file.txt`”这样的路径作为一个大型单词处理。</target>
      </segment>
    </unit>
    <unit id="e7ed8666-5b2b-4939-aa02-619e693ea0a8">
      <notes>
        <note appliesTo="source">line: 12</note>
      </notes>
      <segment state="final">
        <source>- `RightControl+Windows+Arros`: Multiword definition, that groups several words together. The amount of words is configurable.</source>
        <target>- `右 Ctrl+Windows+箭头`：多单词定义。它把多个单词组合起来进行导航操作（也就是一次可以阅读多个单词）。要组合起来的单词数是可以自定义的。</target>
      </segment>
    </unit>
    <unit id="b3c7e035-490b-4806-809a-db2f385060db">
      <notes>
        <note appliesTo="source">line: 13</note>
      </notes>
      <segment state="final">
        <source>- Unassigned: custom regular expression word definition: allows user to define a custom regular expression for word boundaries.</source>
        <target>- 默认未分配手势： 自定义正则表达式单词导航。允许用户使用正则表达式定义单词的拆分规则。</target>
      </segment>
    </unit>
    <unit id="c0f491ca-74b3-49b7-8f54-993632a5846e">
      <notes>
        <note appliesTo="source">line: 15</note>
      </notes>
      <segment state="final">
        <source>Gestures can be customized in WordNav settings panel.</source>
        <target>这些手势在单词导航的设置面板中可以自定义。</target>
      </segment>
    </unit>
    <unit id="f0c8c671-b524-44fb-8c42-4de1634471dd">
      <notes>
        <note appliesTo="source">line: 17</note>
        <note appliesTo="source">prefix: ## </note>
      </notes>
      <segment state="final">
        <source>Word selection</source>
        <target>单词选择</target>
      </segment>
    </unit>
    <unit id="bca29353-a437-49d1-bc22-91661c039dd5">
      <notes>
        <note appliesTo="source">line: 19</note>
      </notes>
      <segment state="final">
        <source>Word selection is supported starting with WordNav v2.0. Just add `shift` modifier to any word navigation gestures to select words. There is also one extra gesture for word selection:</source>
        <target>从 WordNav v2.0 起，支持单词选择。只需将“shift”修饰键加入到相应的单词导航手势即可选择单词。还有另外一种选词手势：</target>
      </segment>
    </unit>
    <unit id="e31efaa8-45f5-4ad4-a78b-515d0b44b4b5">
      <notes>
        <note appliesTo="source">line: 21</note>
        <note appliesTo="source">prefix: * </note>
      </notes>
      <segment state="final">
        <source>`control+shift+numpad1` and `control+windows+shift+numpad1` select word to the right similar to their `rightArrow` counterparts, but they also include trailing spaces into selection.</source>
        <target>`Ctrl+Shift+Numpad1` 和 `Ctrl+Windows+Shift+Numpad1` 向右选择单词，类似于相应的单词选择加`右箭头`的行为，但不同的是该方式的选择会包含尾随空格。</target>
      </segment>
    </unit>
    <unit id="f4db2ba0-d114-48b3-896a-21d1e5ce72f3">
      <notes>
        <note appliesTo="source">line: 23</note>
      </notes>
      <segment state="final">
        <source>Please note, however, that currently used accessibility APIs have multiple issues related to word selection. Please get yourself familiar with the following list of issues and workarounds:</source>
        <target>请注意，当前使用的 Accessibility API 存在多个影响单词选择的问题。请了解以下问题列表和对应的解决方案：</target>
      </segment>
    </unit>
    <unit id="0230fb3c-5722-493c-815c-797d46d23927">
      <notes>
        <note appliesTo="source">line: 25</note>
        <note appliesTo="source">prefix: * </note>
      </notes>
      <segment state="final">
        <source>UIA applications (e.g. Notepad, Visual Studio, Microsoft Word) don't support setting caret at the beginning of selection. In those  applications caret location is stored on WordNav side. As an adverse side effect, word navigation commands might not play well with line and paragraph selection commands (`shift+up/downArrow`, `control+shift+up/downArrow`) and results might be unpredictable. For convenience, character selection commands (`shift+left/rightArrow`) have been updated in WordNav for UIA applications and should work well.</source>
        <target>使用 UIA 接口的应用程序（例如新版记事本、Visual Studio、Microsoft Word）不支持在选择开始时设置插入符。在这些应用程序中，插入符位置存储在 WordNav 端。相应的副作用是单词导航命令可能无法与行和段落选择命令（“shift+上/下箭头”、“control+shift+上/下箭头”）兼容，操作结果不可预测。为了方便起见，UIA 应用程序的字符选择命令（“shift+左/右箭头”） 在 WordNav 中更新，这应该可以正常工作。</target>
      </segment>
    </unit>
    <unit id="b4fdaa3b-bbe6-48e3-a8e1-82b667bf29b4">
      <notes>
        <note appliesTo="source">line: 26</note>
        <note appliesTo="source">prefix: * </note>
      </notes>
      <segment state="final">
        <source>Basic single line Windows edit controls also don't allow to set the caret in front of selection, so the previous point also applies to them. This affects all single line edit boxes within NVDA.</source>
        <target>普通的单行 Windows 编辑框也不允许在选择前面设置插入符号，因此上述问题也适用于此类编辑框。这会影响 NVDA 中的所有单行编辑框。</target>
      </segment>
    </unit>
    <unit id="a41239fb-0536-4092-8679-a020dfb5255c">
      <notes>
        <note appliesTo="source">line: 27</note>
        <note appliesTo="source">prefix: * </note>
      </notes>
      <segment state="final">
        <source>IAccessible2 doesn't provide a way to set selection spanning across multiple paragraphs. There is no known workaround for this issue. This affects rich multiline edit boxes in Chrome and Firefox, such as compose email text area in GMail and compose email window in Thunderbird.</source>
        <target>IAccessible2 没提供跨多个段落设置选择的方法。此问题没有已知的解决方案。这将会影响 Chrome 和 Firefox 中的多行富文本编辑框，例如 GMail 中的撰写电子邮件文本区域和 Thunderbird 中的撰写电子邮件窗口。</target>
      </segment>
    </unit>
    <unit id="79af9d3d-e99a-4ca6-81e8-156165ae6f9a">
      <notes>
        <note appliesTo="source">line: 28</note>
        <note appliesTo="source">prefix: * </note>
      </notes>
      <segment state="final">
        <source>In notepad++ selection update messages come unreasonably slow. As a workaround, WordNav announces selection on NVDA side for word selection commands and silences late notifications for the following 0.5 seconds. As a result, if you press word selection command followed by another (e.g. character) selection command in quick succession, you might miss selection notification for the latter one if it came within 0.5 seconds from the last word selection command.</source>
        <target>在 Notepad++ 中，提示选择的消息响应速度非常慢。作为解决方法，WordNav 在 NVDA 端朗读单词选择，并在接下来的 0.5 秒内静音延迟通知。因此，如果您快速连续按下单词选择命令，然后再按下另一个（例如字符）选择命令，并且如果后一个命令在距最后一个单词选择命令 0.5 秒内出现，您可能听不到后一个已选择消息。</target>
      </segment>
    </unit>
    <unit id="b2892582-97bd-488d-a0c6-0cc6859569b4">
      <notes>
        <note appliesTo="source">line: 29</note>
        <note appliesTo="source">prefix: * </note>
      </notes>
      <segment state="final">
        <source>In multiline edit boxes supporting TOM interface NVDA incorrectly identifies cursor location when selection is present. This has been fixed in nvaccess/nvda#16455, which is scheduled to be included in NVDA v2024.2 release. Before that release word selection commands won't work correctly in TOM edit boxes, such as NVDA log viewer.</source>
        <target>在支持 TOM 接口的多行编辑框中，使用单词选择时，NVDA 会错误地识别光标位置。此问题已在 nvaccess/nvda#16455 中修复，已包含在 NVDA2024.2 版本中。在此版本之前，单词选择命令无法在 TOM 编辑框中正常工作，例如 NVDA 日志查看器。</target>
      </segment>
    </unit>
    <unit id="983afb65-70bb-461d-a801-297a8c49efb5">
      <notes>
        <note appliesTo="source">line: 31</note>
        <note appliesTo="source">prefix: ## </note>
      </notes>
      <segment state="final">
        <source>Notes</source>
        <target>注意</target>
      </segment>
    </unit>
    <unit id="67c30481-9355-43b6-98b6-23c3fe86aa2a">
      <notes>
        <note appliesTo="source">line: 33</note>
      </notes>
      <segment state="final">
        <source>- If you would like to use virtual desktops feature of Windows 10, please remember to disable Control+Windows+Arrows keyboard shortcuts either in WordNav Settings panel, or in NVDA Input gestures dialog.</source>
        <target>- 如果您想使用 Windows 10 的虚拟桌面功能，请记住在“单词导航”设置面板或 NVDA 输入手势对话框中禁用 Ctrl+Windows+箭头的快捷键。</target>
      </segment>
    </unit>
    <unit id="279f572a-0c5e-4b79-8394-63642f475430">
      <notes>
        <note appliesTo="source">line: 34</note>
      </notes>
      <segment state="final">
        <source>- Compatibility with VSCode requires NVDA add-on IndentNav v2.0 or later to be installed. Additionally, VSCode extension [Accessibility for NVDA IndentNav](https://marketplace.visualstudio.com/items?itemName=TonyMalykh.nvda-indent-nav-accessibility) must be installed in VSCode.</source>
        <target>- 若希望单词导航与 VSCode 兼容，需要安装 NVDA 插件 IndentNav v2.0 或更高版本。此外，VSCode 扩展 [Accessibility for NVDA IndentNav](https://marketplace.visualstudio.com/items?itemName=TonyMalykh.nvda-indent-nav-accessibility) 也必须安装。</target>
      </segment>
    </unit>
    <unit id="29b34072-9044-462c-b882-96ce6711aa41">
      <notes>
        <note appliesTo="source">line: 36</note>
        <note appliesTo="source">prefix: ##  </note>
      </notes>
      <segment state="final">
        <source>Downloads</source>
        <target>下载</target>
      </segment>
    </unit>
    <unit id="eea70f7f-5c0b-42f3-83eb-c6ef88e220cc">
      <notes>
        <note appliesTo="source">line: 38</note>
      </notes>
      <segment state="final">
        <source>Please install the latest version from NVDA add-on store.</source>
        <target>请从 NVDA 插件商店安装最新版本。</target>
      </segment>
    </unit>
  </file>
</xliff>
